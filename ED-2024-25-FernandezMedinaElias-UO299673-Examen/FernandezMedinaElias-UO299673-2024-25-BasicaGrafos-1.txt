Sistema: EII-L11-09/192.168.62.151
Fecha y hora: 2024-10-04T16:45:43.223246900

Empieza la prueba basica de nodos: 
g=new Graph<Integer>(3): 
1 g.existsNode(1): false
2 g.existsNode(2): false
3 g.addNode(1): true
4 g.addNode(2): true
5 g.existsNode(1): true
6 g.existsNode(2): true
7 g.addNode(1): false
8 g.addNode(2): false
9 g.addNode(3): true
10 g.addNode(4): Graph is full
11 g.existsNode(4): false
12 g.existsNode(5): false
Termina la prueba basica de nodos.

Empieza la prueba basica de aristas: 
g=new Graph<Integer>(3): 
1 g.existsEdge(1,2):  genera excepcion --> Edge weight could not be obtained: 1 is not present in the current graph.
2 g.getEdge(1,2) --> Edge weight could not be obtained: 1 is not present in the current graph.
3 g.addNode(1): true
4 g.existsEdge(1,2):  genera excepcion --> Edge weight could not be obtained: 2 is not present in the current graph.
5 g.getEdge(1,2) --> Edge weight could not be obtained: 2 is not present in the current graph.
6 g.existsEdge(2,1):  genera excepcion --> Edge weight could not be obtained: 2 is not present in the current graph.
7 g.getEdge(2,1) --> Edge weight could not be obtained: 2 is not present in the current graph.
8 g.addNode(2): true
9 g.existsEdge(1,2): false
10 g.getEdge(1,2) --> -1.0
11 g.addEdge(1,2,12.12): true
12 g.addEdge(1,2,12.1212): false
13 g.addNode(3): true
14 g.existsEdge(1,3): false
15 g.existsEdge(3,2): false
16 g.getEdge(1,3) --> -1.0
17 g.getEdge(3,2) --> -1.0
18 g.addEdge(1,1,11.11): true
19 g.addEdge(1,2,12.12): false
20 g.addEdge(1,3,13.13): true
21 g.addEdge(2,1,21.21): true
22 g.addEdge(2,2,22.22): true
23 g.addEdge(2,3,23.23): true
24 g.addEdge(3,1,31.31): true
25 g.addEdge(3,2,32.32): true
26 g.addEdge(3,3,33.33): true
27 g.addEdge(1,1,101): false
28 g.addEdge(1,2,102): false
29 g.addEdge(1,3,103): false
30 g.addEdge(2,1,201): false
31 g.addEdge(2,2,202): false
32 g.addEdge(2,3,203): false
33 g.addEdge(3,1,301): false
34 g.addEdge(3,2,302): false
35 g.addEdge(3,3,303): false
36 g.getEdge(1,1) --> 11.11
37 g.getEdge(1,2) --> 12.12
38 g.getEdge(1,3) --> 13.129999999999999
39 g.getEdge(2,1) --> 21.21
40 g.getEdge(2,2) --> 22.22
41 g.getEdge(2,3) --> 23.23
42 g.getEdge(3,1) --> 31.310000000000002
43 g.getEdge(3,2) --> 32.32
44 g.getEdge(3,3) --> 33.33
Termina la prueba basica de aristas.

Empieza la prueba basica de evolucion: 
1 g.existsNode(1): false
2 g.existsNode(2): false
3 g.addNode(1): true
4 g.addNode(2): true
5 g.existsNode(1): true
6 g.existsNode(2): true
7 g.addNode(1): false
8 g.addNode(2): false
9 g.addEdge(1,2, 1.2): true
10 g.addEdge(2,1, 2.1): true
11 g.addEdge(1,1, 1.1): true
12 g.getEdge(1,2) --> 1.2
13 g.getEdge(2,1) --> 2.1
14 g.getEdge(1,1) --> 1.1
15 g.getEdge(2,3) --> Edge weight could not be obtained: 3 is not present in the current graph.
16 g.existsEdge(1,2): true
17 g.existsEdge(2,1): true
18 g.existsEdge(1,1): true
19 g.existsEdge(2,2): false
20 g.removeEdge(2,2): false
21 g.addEdge(2,2,2.2): true
22 g.getEdge(2,2) --> 2.2
23 g.existsEdge(2,2): true
24 g.removeEdge(2,2): true
25 g.removeNode(3):  genera excepcion --> Index -1 out of bounds for length 3
26 g.addNode(3): true
27 g.addNode(4): Graph is full
28 g.getEdge(1,3) --> -1.0
29 g.addEdge(1,3, 1.3): true
30 g.existsEdge(1, 3): true
31 g.getEdge(1,3) --> 1.3
32 g.getEdge(1,4) --> Edge weight could not be obtained: 4 is not present in the current graph.
33 g.getEdge(5,1) --> Edge weight could not be obtained: 5 is not present in the current graph.
34 g.getEdge(5,4) --> Edge weight could not be obtained: 5 is not present in the current graph.
35 g.removeNode(3): true
36 g.removeNode(3):  genera excepcion --> Index -1 out of bounds for length 3
37 g.existsEdge(1,3):  genera excepcion --> Edge weight could not be obtained: 3 is not present in the current graph.
38 g.getEdge(1,3) --> Edge weight could not be obtained: 3 is not present in the current graph.
39 g.removeNode(2): true
40 g.removeNode(2):  genera excepcion --> Index -1 out of bounds for length 3
41 g.existsEdge(1, 1): true
42 g.removeNode(1): true
43 g.existsNode(1): false
44 g.existsNode(2): false
45 g.existsNode(3): false
46 g.existsNode(4): false
47 g.addNode(4): true
48 g.existsNode(4): true
49 g.addEdge(4,4, 4.4): true
50 g.existsEdge(4, 4): true
51 g.getEdge(4,4) --> 4.4
52 g.removeNode(4): true
53 g.removeNode(4):  genera excepcion --> Index -1 out of bounds for length 3
54 g.existsEdge(4, 4):  genera excepcion --> Edge weight could not be obtained: 4 is not present in the current graph.
55 g.addNode(7): true
56 g.removeNode(2):  genera excepcion --> Index -1 out of bounds for length 3
57 g.removeNode(3):  genera excepcion --> Index -1 out of bounds for length 3
58 g.removeNode(4):  genera excepcion --> Index -1 out of bounds for length 3
59 g.existsEdge(7,7): false
60 g.addEdge(7,7, 7.7): true
61 g.addEdge(7,7, 17.17): false
62 g.getEdge(7,7) --> 7.7
63 g.addNode(8): true
64 g.addNode(9): true
65 g.existsEdge(7, 8): false
66 g.existsEdge(8,7): false
67 g.existsEdge(8,8): false
68 g.existsEdge(8,9): false
69 g.existsEdge(9,8): false
70 g.existsEdge(9,9): false
71 g.addEdge(7,8, 7.8): true
72 g.addEdge(8,7, 8.7): true
73 g.addEdge(8,8, 8.8): true
74 g.addEdge(8,9, 8.9): true
75 g.addEdge(9,8, 9.8): true
76 g.addEdge(9,9, 9.9): true
77 g.addEdge(7,9, 7.9): true
78 g.addEdge(9,7, 9.7): true
79 g.getEdge(7, 7) --> 7.7
80 g.getEdge(7, 8) --> 7.8
81 g.getEdge(7, 9) --> 7.9
82 g.getEdge(8, 7) --> 8.7
83 g.getEdge(8, 8) --> 8.8
84 g.getEdge(8, 9) --> 8.9
85 g.getEdge(9, 7) --> 9.7
86 g.getEdge(9, 8) --> 9.8
87 g.getEdge(9, 9) --> 9.9
88 g.removeNode(7): false
89 g.removeNode(7):  genera excepcion --> Index -1 out of bounds for length 3
90 g.getEdge(7, 7) --> Edge weight could not be obtained: 7 is not present in the current graph.
91 g.getEdge(7, 8) --> Edge weight could not be obtained: 7 is not present in the current graph.
92 g.getEdge(7, 9) --> Edge weight could not be obtained: 7 is not present in the current graph.
93 g.getEdge(8, 7) --> Edge weight could not be obtained: 7 is not present in the current graph.
94 g.getEdge(8, 8) --> 8.8
95 g.getEdge(8, 9) --> 8.7
96 g.getEdge(9, 7) --> Edge weight could not be obtained: 7 is not present in the current graph.
97 g.getEdge(9, 8) --> 7.8
98 g.getEdge(9, 9) --> 7.7
99 g.removeNode(null): Element to remove is null.
100 g.addNode(null): Element to insert is null.
101 g.addNode(10):  genera excepcion --> Graph is full
102 g.getEdge(8, 10) -->  genera excepcion --> Edge weight could not be obtained: 10 is not present in the current graph.
103 g.getEdge(10, 9) -->  genera excepcion --> Edge weight could not be obtained: 10 is not present in the current graph.
104 g.addNode(null): Element to insert is null.
105 g.addEdge(8,8,-8.8): Weight edge could not be less or equals to 0
106 g.addEdge(7,8,-7.8): Weight edge could not be less or equals to 0
107 g.addEdge(8,7,-8.7): Weight edge could not be less or equals to 0
108 g.addEdge(7,7,-7.7): Weight edge could not be less or equals to 0
109 g.addEdge(null,8,0.8): Edge could not be loaded: source element null is not part of the graph.
110 g.addEdge(8,null,0.8): Edge could not be loaded: source element null is not part of the graph.
111 g.addEdge(null,null,0.8): Edge could not be loaded: source element null is not part of the graph.
112 g.getEdge(null,10) --> Edge weight could not be obtained: null is not present in the current graph.
113 g.getEdge(10,null) --> Edge weight could not be obtained: 10 is not present in the current graph.
114 g.getEdge(null,null) --> Edge weight could not be obtained: null is not present in the current graph.
115 g.existsNode(null): false
116 g.existsEdge(null,null) --> Edge weight could not be obtained: null is not present in the current graph.
Termina la prueba basica de evolucion.
